<ID, foo> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, bar> <SEMICOLON, ;> <RCURL, }> <ID, bar> <LPAREN, (> <ID, x> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, x> <RELOP, <> <CONST_INT, 0> <RPAREN, )> <ADDOP, -> <ID, x> <SEMICOLON, ;> <ID, x> <SEMICOLON, ;> <RCURL, }> <ID, oops> <SEMICOLON, ;> <ID, oops> <LPAREN, (> <ID, pos> <RPAREN, )> <LCURL, {> <ID, oops> <ASSIGNOP, => <ID, pos> <MULOP, *> <CONST_INT, 9> <ADDOP, +> <CONST_FLOAT, 2.5> <SEMICOLON, ;> <RCURL, }> <ID, func> <LPAREN, (> <COMMA, ,> <COMMA, ,> <RPAREN, )> <SEMICOLON, ;> <ID, func> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <COMMA, ,> <ID, c> <RPAREN, )> <LCURL, {> <ID, a> <ADDOP, -> <ID, bar> <LPAREN, (> <ID, b> <RPAREN, )> <ADDOP, +> <ID, c> <SEMICOLON, ;> <RCURL, }> <ID, func> <LPAREN, (> <ID, a> <COMMA, ,> <ID, b> <COMMA, ,> <ID, c> <RPAREN, )> <LCURL, {> <ID, a> <ADDOP, -> <ID, bar> <LPAREN, (> <ID, b> <RPAREN, )> <ADDOP, +> <ID, c> <SEMICOLON, ;> <RCURL, }> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <ID, x> <COMMA, ,> <ID, y> <SEMICOLON, ;> <ID, z> <SEMICOLON, ;> <ID, x> <ASSIGNOP, => <CONST_INT, 2> <SEMICOLON, ;> <ID, y> <ASSIGNOP, => <ID, x> <MULOP, *> <CONST_INT, 45> <SEMICOLON, ;> <ID, z> <ASSIGNOP, => <ID, x> <MULOP, *> <ID, y> <MULOP, /> <CONST_FLOAT, 1.0> <MULOP, *> <CONST_FLOAT, 0.5> <SEMICOLON, ;> <ID, some_val> <SEMICOLON, ;> <ID, some_val> <ASSIGNOP, => <ID, func> <LPAREN, (> <ID, x> <COMMA, ,> <ID, z> <COMMA, ,> <ID, y> <RPAREN, )> <SEMICOLON, ;> <ID, i> <COMMA, ,> <ID, odd> <COMMA, ,> <ID, even> <SEMICOLON, ;> <ID, odd> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, even> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <LPAREN, (> <ID, i> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, i> <RELOP, <> <CONST_INT, 10> <SEMICOLON, ;> <ID, i> <INCOP, ++> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, i> <MULOP, %> <CONST_INT, 2> <RELOP, ==> <CONST_INT, 0> <RPAREN, )> <ID, even> <INCOP, ++> <SEMICOLON, ;> <ID, odd> <INCOP, ++> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, i> <RELOP, >> <CONST_INT, 0> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, odd> <RELOP, >> <ID, even> <RPAREN, )> <LPAREN, (> <ID, even> <RELOP, ==> <ID, i> <RPAREN, )> <ID, cnt> <DECOP, --> <SEMICOLON, ;> <ID, cnt> <INCOP, ++> <SEMICOLON, ;> <LPAREN, (> <ID, odd> <RELOP, ==> <ID, i> <RPAREN, )> <ID, cnt> <INCOP, ++> <SEMICOLON, ;> <ID, cnt> <DECOP, --> <SEMICOLON, ;> <ID, i> <DECOP, --> <SEMICOLON, ;> <RCURL, }> <CONST_INT, 0> <SEMICOLON, ;> <RCURL, }> 